{"remainingRequest":"/Users/viktorijadeksne/Desktop/Fireblog/node_modules/babel-loader/lib/index.js!/Users/viktorijadeksne/Desktop/Fireblog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/viktorijadeksne/Desktop/Fireblog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/viktorijadeksne/Desktop/Fireblog/src/views/Blogs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/viktorijadeksne/Desktop/Fireblog/src/views/Blogs.vue","mtime":1718640190976},{"path":"/Users/viktorijadeksne/Desktop/Fireblog/node_modules/cache-loader/dist/cjs.js","mtime":1718474750958},{"path":"/Users/viktorijadeksne/Desktop/Fireblog/node_modules/babel-loader/lib/index.js","mtime":1718474751279},{"path":"/Users/viktorijadeksne/Desktop/Fireblog/node_modules/cache-loader/dist/cjs.js","mtime":1718474750958},{"path":"/Users/viktorijadeksne/Desktop/Fireblog/node_modules/vue-loader/lib/index.js","mtime":1718474751379}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEJsb2dDYXJkIGZyb20gIi4uL2NvbXBvbmVudHMvQmxvZ0NhcmQiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImJsb2dzIiwKICBjb21wb25lbnRzOiB7CiAgICBCbG9nQ2FyZDogQmxvZ0NhcmQKICB9LAogIGNvbXB1dGVkOiB7CiAgICBibG9nUG9zdHM6IGZ1bmN0aW9uIGJsb2dQb3N0cygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmJsb2dQb3N0czsKICAgIH0sCiAgICBlZGl0UG9zdDogewogICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZWRpdFBvc3Q7CiAgICAgIH0sCiAgICAgIHNldDogZnVuY3Rpb24gc2V0KHBheWxvYWQpIHsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoInRvZ2dsZUVkaXRQb3N0IiwgcGF5bG9hZCk7CiAgICAgIH0KICAgIH0sCiAgICBwcm9maWxlQWRtaW46IGZ1bmN0aW9uIHByb2ZpbGVBZG1pbigpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnByb2ZpbGVBZG1pbjsKICAgIH0KICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLiRzdG9yZS5jb21taXQoInRvZ2dsZUVkaXRQb3N0IiwgZmFsc2UpOwogIH0KfTs="},{"version":3,"sources":["Blogs.vue"],"names":[],"mappings":";;;;;;;;;;;;AAaA,OAAA,QAAA,MAAA,wBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,GAFA;AAGA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA;AACA,KAHA;AAIA,IAAA,QAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,OAJA,EAIA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,gBAAA,EAAA,OAAA;AACA;AANA,KAJA;AAYA,IAAA,YAZA,0BAYA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,YAAA;AACA;AAdA,GAHA;AAmBA,EAAA,aAnBA,2BAmBA;AACA,SAAA,MAAA,CAAA,MAAA,CAAA,gBAAA,EAAA,KAAA;AACA;AArBA,CAAA","sourcesContent":["<template>\n  <div class=\"blog-card-wrap\">\n    <div class=\"blog-cards container\">\n      <div v-if=\"profileAdmin\" class=\"toggle-edit\">\n        <span>Toggle Editing Post</span>\n        <input type=\"checkbox\" v-model=\"editPost\" />\n      </div>\n      <BlogCard :post=\"post\" v-for=\"(post, index) in blogPosts\" :key=\"index\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport BlogCard from \"../components/BlogCard\";\nexport default {\n  name: \"blogs\",\n  components: { BlogCard },\n  computed: {\n    blogPosts() {\n      return this.$store.state.blogPosts;\n    },\n    editPost: {\n      get() {\n        return this.$store.state.editPost;\n      },\n      set(payload) {\n        this.$store.commit(\"toggleEditPost\", payload);\n      },\n    },\n    profileAdmin() {\n      return this.$store.state.profileAdmin;\n    },\n  },\n  beforeDestroy() {\n    this.$store.commit(\"toggleEditPost\", false);\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.blog-cards {\n  position: relative;\n\n  .toggle-edit {\n    display: flex;\n    align-items: center;\n    position: absolute;\n    top: -70px;\n    right: 0;\n\n    span {\n      margin-right: 16px;\n    }\n\n    input[type=\"checkbox\"] {\n      position: relative;\n      border: none;\n      -webkit-appearance: none;\n      background: #fff;\n      outline: none;\n      width: 80px;\n      height: 30px;\n      border-radius: 20px;\n      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),\n        0 2px 4px -1px rgba(0, 0, 0, 0.06);\n    }\n\n    input[type=\"checkbox\"]:before {\n      content: \"\";\n      position: absolute;\n      width: 30px;\n      height: 30px;\n      border-radius: 20px;\n      top: 0;\n      left: 0;\n      background: #303030;\n      transform: scale(1.1);\n      transition: 750ms ease all;\n      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),\n        0 2px 4px -1px rgba(0, 0, 0, 0.06);\n    }\n\n    input:checked[type=\"checkbox\"]:before {\n      background: #fff;\n      left: 52px;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/views"}]}